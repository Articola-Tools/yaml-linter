name: "New changes validation"

on:
    pull_request:  # yamllint disable-line rule:empty-values

permissions:
    contents: "read"
    packages: "read"

env:
    REGISTRY: "ghcr.io"
    IMAGE_NAME: "articola-tools/yaml-linter"

jobs:
    find-changed-files:
        runs-on: "ubuntu-latest"
        outputs:
            is_yaml_changed: "${{ steps.filter.outputs.yaml }}"
            is_dockerfile_changed: "${{ steps.filter.outputs.dockerfile }}"
            is_yaml_linter_image_changed: "${{ steps.filter.outputs.yaml-linter-image }}"
            is_markdown_changed: "${{ steps.filter.outputs.markdown }}"
        permissions:
            pull-requests: "read"
        steps:
            - name: "Checkout ${{ github.event.repository.name }}"
              uses: "actions/checkout@v4"
              with:
                  fetch-depth: 1

            - name: "Find changed files"
              uses: "dorny/paths-filter@v3"
              id: "filter"
              with:
                  filters: |
                      yaml:
                      - "**/*.yaml"
                      - "**/*.yml"
                      dockerfile:
                      - "**/Dockerfile"
                      yaml-linter-image:
                      - "**/Dockerfile"
                      - "**/.dockerignore"
                      - "**/.yamllint"
                      markdown:
                      - "**/*.md"

    validate-yaml-linter-image:
        runs-on: "ubuntu-latest"
        needs: "find-changed-files"
        if: "${{ needs.find-changed-files.outputs.is_yaml_linter_image_changed == 'true' }}"

        # NOTE: building and running Docker image of YAML linter take around 1 minute.
        # If this job takes more than 5 minutes, it means that something is wrong.
        timeout-minutes: 5
        steps:
            - name: "Checkout ${{ github.event.repository.name }}"
              uses: "actions/checkout@v4"

            - name: "Set up Docker Buildx"
              uses: "docker/setup-buildx-action@v3"

            - name: "Login to Docker registry"
              uses: "docker/login-action@v3"
              with:
                  registry: "${{ env.REGISTRY }}"
                  username: "${{ github.actor }}"
                  password: "${{ secrets.GITHUB_TOKEN }}"

            - name: "Build YAML linter Docker image"
              uses: "docker/build-push-action@v6"
              with:
                  # NOTE: setup of `context` is needed to force builder to use the `.dockerignore` file.
                  context: "."
                  push: false
                  load: true

                  # NOTE: using another name to don't allow docker to download image from the internet in the next step.
                  tags: "local/yaml-linter-pr:latest"
                  cache-from: "type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
                  cache-to: "type=inline"

            - name: "Test correctly formatted YAML"
              run: "docker run --rm -v ${{ github.workspace }}/tests/correct_yaml:/linter_workdir/repo
                    local/yaml-linter-pr:latest"

            - name: "Test incorrectly formatted YAML"
              run: "docker run --rm -v ${{ github.workspace }}/tests/incorrect_yaml:/linter_workdir/repo
                    local/yaml-linter-pr:latest && { echo 'Incorrectly formatted YAML test must fail!' >&2; exit 1; }
                    || exit 0"

            # HACK: remove `tests` directory before linting repo directory because there is no way to easily ignore folder
            # from yamllinter CLI.
            - name: "Remove `tests` directory"
              run: "rm -rf ${{ github.workspace }}/tests"

            - name: "Lint repo directory"
              run: "docker run --rm -v ${{ github.workspace }}:/linter_workdir/repo local/yaml-linter-pr:latest"

            - name: "Run Trivy vulnerability scanner"
              uses: "aquasecurity/trivy-action@0.28.0"
              env:
                  # NOTE: this is needed because sometimes GHCR hits the rate limit, and AWS will be used instead.
                  TRIVY_DB_REPOSITORY: "ghcr.io/aquasecurity/trivy-db,public.ecr.aws/aquasecurity/trivy-db"
              with:
                  image-ref: "local/yaml-linter-pr:latest"
                  format: "table"
                  exit-code: "1"
                  ignore-unfixed: true
                  vuln-type: "os,library"
                  severity: "CRITICAL,HIGH,MEDIUM,LOW"
                  scanners: "vuln,secret,misconfig"

    validate-dockerfile-changes:
        runs-on: "ubuntu-latest"
        needs: "find-changed-files"
        if: "${{ needs.find-changed-files.outputs.is_dockerfile_changed == 'true' }}"

        # NOTE: validating Dockerfile changes takes around 1 minute.
        # If this job takes more than 5 minutes, it means that something is wrong.
        timeout-minutes: 5
        steps:
            - name: "Checkout ${{ github.event.repository.name }}"
              uses: "actions/checkout@v4"

            - name: "Login to Docker registry"
              uses: "docker/login-action@v3"
              with:
                  registry: "${{ env.REGISTRY }}"
                  username: "${{ github.actor }}"
                  password: "${{ secrets.GITHUB_TOKEN }}"

            - name: "Run Dockerfile linter"
              run: "docker run --rm -v ${{ github.workspace }}:/linter_workdir/repo
                    ${{ env.REGISTRY }}/articola-tools/dockerfile-linter:latest"

    validate-yaml-changes:
        runs-on: "ubuntu-latest"
        needs: "find-changed-files"

        # NOTE: do not run this job when `is_yaml_linter_image_changed` is true, because this job validates YAML changes
        # with the latest released yaml-linter image, and new changes in yaml-linter image can introduce false positives for
        # this job (since changes in yaml-linter can change YAML rules).
        if: "${{ needs.find-changed-files.outputs.is_yaml_changed == 'true'
             && needs.find-changed-files.outputs.is_yaml_linter_image_changed == 'false' }}"

        # NOTE: validating YAML changes takes around 1 minute.
        # If this job takes more than 5 minutes, it means that something is wrong.
        timeout-minutes: 5
        steps:
            - name: "Checkout ${{ github.event.repository.name }}"
              uses: "actions/checkout@v4"

            - name: "Login to Docker registry"
              uses: "docker/login-action@v3"
              with:
                  registry: "${{ env.REGISTRY }}"
                  username: "${{ github.actor }}"
                  password: "${{ secrets.GITHUB_TOKEN }}"

            # HACK: remove `tests` directory before linting repo directory because there is no way to easily ignore folder
            # from yamllinter CLI.
            -   name: "Remove `tests` directory"
                run: "rm -rf ${{ github.workspace }}/tests"

            - name: "Run YAML linter"
              run: "docker run --rm -v ${{ github.workspace }}:/linter_workdir/repo
                    ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"

    validate-markdown-changes:
        runs-on: "ubuntu-latest"
        needs: "find-changed-files"
        if: "${{ needs.find-changed-files.outputs.is_markdown_changed == 'true' }}"

        # NOTE: validating Markdown changes takes around 1 minute.
        # If this job takes more than 5 minutes, it means that something is wrong.
        timeout-minutes: 5
        steps:
            - name: "Checkout ${{ github.event.repository.name }}"
              uses: "actions/checkout@v4"

            - name: "Login to Docker registry"
              uses: "docker/login-action@v3"
              with:
                  registry: "${{ env.REGISTRY }}"
                  username: "${{ github.actor }}"
                  password: "${{ secrets.GITHUB_TOKEN }}"

            - name: "Run Dockerfile linter"
              run: "docker run --rm -v ${{ github.workspace }}:/linter_workdir/repo
                    ${{ env.REGISTRY }}/articola-tools/markdown-linter:latest"